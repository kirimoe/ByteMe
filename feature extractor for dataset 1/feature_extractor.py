import pefile,sys

def extract_pe_features(file_path):
    # Open the PE file
    pe = pefile.PE(file_path)
    
    # Extract features
    features = {
        'Magic': pe.DOS_HEADER.e_magic,
        'rdata_Misc_VirtualSize': pe.sections[0].Misc_VirtualSize if len(pe.sections) > 0 else None,
        'idata_PointerToRelocations': pe.sections[1].PointerToRelocations if len(pe.sections) > 1 else None,
        'e_sp': pe.DOS_HEADER.e_sp,
        'pdata_Misc_VirtualSize': pe.sections[2].Misc_VirtualSize if len(pe.sections) > 2 else None,
        'e_oeminfo': pe.DOS_HEADER.e_oeminfo,
        'rdata_NumberOfLinenumbers': pe.sections[0].NumberOfLinenumbers if len(pe.sections) > 0 else None,
        'NumberOfRvaAndSizes': pe.OPTIONAL_HEADER.NumberOfRvaAndSizes,
        'data_PointerToRelocations': pe.sections[3].PointerToRelocations if len(pe.sections) > 3 else None,
        'data_NumberOfLinenumbers': pe.sections[3].NumberOfLinenumbers if len(pe.sections) > 3 else None,
        'text_PointerToLinenumbers': pe.sections[5].PointerToLinenumbers if len(pe.sections) > 5 else None,
        'rsrc_PointerToRawData': pe.sections[6].PointerToRawData if len(pe.sections) > 6 else None,
        'data_NumberOfRelocations': pe.sections[3].NumberOfRelocations if len(pe.sections) > 3 else None,
        'edata_NumberOfLinenumbers': pe.sections[4].NumberOfLinenumbers if len(pe.sections) > 4 else None,
        'reloc_PointerToRelocations': pe.sections[7].PointerToRelocations if len(pe.sections) > 7 else None,
        'pdata_SizeOfRawData': pe.sections[2].SizeOfRawData if len(pe.sections) > 2 else None,
        'pdata_PointerToLinenumbers': pe.sections[2].PointerToLinenumbers if len(pe.sections) > 2 else None,
        'DllCharacteristics': pe.OPTIONAL_HEADER.DllCharacteristics,
        'reloc_VirtualAddress': pe.sections[7].VirtualAddress if len(pe.sections) > 7 else None,
        'e_lfanew': pe.DOS_HEADER.e_lfanew,
        'rsrc_VirtualAddress': pe.sections[6].VirtualAddress if len(pe.sections) > 6 else None,
        'text_NumberOfLinenumbers': pe.sections[5].NumberOfLinenumbers if len(pe.sections) > 5 else None,
        'e_ip': pe.DOS_HEADER.e_ip,
        'SHA256': pe.sections[0].get_hash_md5() if len(pe.sections) > 0 else None,
        'edata_Characteristics': pe.sections[4].Characteristics if len(pe.sections) > 4 else None,
        'MajorOperatingSystemVersion': pe.OPTIONAL_HEADER.MajorOperatingSystemVersion,
        'edata_PointerToRawData': pe.sections[4].PointerToRawData if len(pe.sections) > 4 else None,
        'tls_VirtualAddress': pe.sections[8].VirtualAddress if len(pe.sections) > 8 else None,
        'AddressOfEntryPoint': pe.OPTIONAL_HEADER.AddressOfEntryPoint,
        'reloc_PointerToLinenumbers': pe.sections[7].PointerToLinenumbers if len(pe.sections) > 7 else None,
        'edata_VirtualAddress': pe.sections[4].VirtualAddress if len(pe.sections) > 4 else None,
        'bss_Characteristics': pe.sections[9].Characteristics if len(pe.sections) > 9 else None,
        'e_magic': pe.DOS_HEADER.e_magic,
        'reloc_PointerToRawData': pe.sections[7].PointerToRawData if len(pe.sections) > 7 else None,
        'bss_PointerToLinenumbers': pe.sections[9].PointerToLinenumbers if len(pe.sections) > 9 else None,
        'MinorSubsystemVersion': pe.OPTIONAL_HEADER.MinorSubsystemVersion,
        'e_cs': pe.DOS_HEADER.e_cs,
        'e_oemid': pe.DOS_HEADER.e_oemid,
        'reloc_SizeOfRawData': pe.sections[7].SizeOfRawData if len(pe.sections) > 7 else None,
        'CheckSum': pe.OPTIONAL_HEADER.CheckSum,
        'rsrc_PointerToLinenumbers': pe.sections[6].PointerToLinenumbers if len(pe.sections) > 6 else None,
        'Subsystem': pe.OPTIONAL_HEADER.Subsystem,
        'pdata_VirtualAddress': pe.sections[2].VirtualAddress if len(pe.sections) > 2 else None,
        'bss_NumberOfLinenumbers': pe.sections[9].NumberOfLinenumbers if len(pe.sections) > 9 else None,
        'text_Characteristics': pe.sections[5].Characteristics if len(pe.sections) > 5 else None,
        'tls_Misc_VirtualSize': pe.sections[8].Misc_VirtualSize if len(pe.sections) > 8 else None,
        'data_Characteristics': pe.sections[3].Characteristics if len(pe.sections) > 3 else None,
        'data_Misc_VirtualSize': pe.sections[3].Misc_VirtualSize if len(pe.sections) > 3 else None,
        'bss_PointerToRawData': pe.sections[9].PointerToRawData if len(pe.sections) > 9 else None,
        'bss_PointerToRelocations': pe.sections[9].PointerToRelocations if len(pe.sections) > 9 else None,
        'pdata_PointerToRawData': pe.sections[2].PointerToRawData if len(pe.sections) > 2 else None,
        'MajorImageVersion': pe.OPTIONAL_HEADER.MajorImageVersion,
        'rsrc_Characteristics': pe.sections[6].Characteristics if len(pe.sections) > 6 else None,
        'tls_Characteristics': pe.sections[8].Characteristics if len(pe.sections) > 8 else None,
        'rdata_PointerToRawData': pe.sections[0].PointerToRawData if len(pe.sections) > 0 else None,
        'text_PointerToRawData': pe.sections[5].PointerToRawData if len(pe.sections) > 5 else None,
        'tls_SizeOfRawData': pe.sections[8].SizeOfRawData if len(pe.sections) > 8 else None,
        'idata_SizeOfRawData': pe.sections[1].SizeOfRawData if len(pe.sections) > 1 else None,
        'text_SizeOfRawData': pe.sections[5].SizeOfRawData if len(pe.sections) > 5 else None,
        'data_PointerToLinenumbers': pe.sections[3].PointerToLinenumbers if len(pe.sections) > 3 else None,
        'SizeOfInitializedData': pe.OPTIONAL_HEADER.SizeOfInitializedData,
        'BaseOfCode': pe.OPTIONAL_HEADER.BaseOfCode,
        'MajorLinkerVersion': pe.OPTIONAL_HEADER.MajorLinkerVersion,
        'NumberOfSections': pe.FILE_HEADER.NumberOfSections,
        'SizeOfUninitializedData': pe.OPTIONAL_HEADER.SizeOfUninitializedData,
        'SizeOfImage': pe.OPTIONAL_HEADER.SizeOfImage,
        'e_cblp': pe.DOS_HEADER.e_cblp,
        'e_maxalloc': pe.DOS_HEADER.e_maxalloc,
        'rdata_NumberOfRelocations': pe.sections[0].NumberOfRelocations if len(pe.sections) > 0 else None,
        'edata_Misc_VirtualSize': pe.sections[4].Misc_VirtualSize if len(pe.sections) > 4 else None,
        'SizeOfHeapCommit': pe.OPTIONAL_HEADER.SizeOfHeapCommit,
        'PointerToSymbolTable': pe.FILE_HEADER.PointerToSymbolTable,
        'idata_PointerToLinenumbers': pe.sections[1].PointerToLinenumbers if len(pe.sections) > 1 else None,
        'e_crlc': pe.DOS_HEADER.e_crlc,
        'SizeOfOptionalHeader': pe.FILE_HEADER.SizeOfOptionalHeader,
        'idata_VirtualAddress': pe.sections[1].VirtualAddress if len(pe.sections) > 1 else None,
        'idata_Characteristics': pe.sections[1].Characteristics if len(pe.sections) > 1 else None,
        'reloc_NumberOfRelocations': pe.sections[7].NumberOfRelocations if len(pe.sections) > 7 else None,
        'e_minalloc': pe.DOS_HEADER.e_minalloc,
        'e_csum': pe.DOS_HEADER.e_csum,
        'bss_Misc_VirtualSize': pe.sections[9].Misc_VirtualSize if len(pe.sections) > 9 else None,
        'pdata_NumberOfRelocations': pe.sections[2].NumberOfRelocations if len(pe.sections) > 2 else None,
        'Machine': pe.FILE_HEADER.Machine,
        'bss_SizeOfRawData': pe.sections[9].SizeOfRawData if len(pe.sections) > 9 else None,
        'rsrc_Misc_VirtualSize': pe.sections[6].Misc_VirtualSize if len(pe.sections) > 6 else None,
        'rdata_PointerToLinenumbers': pe.sections[0].PointerToLinenumbers if len(pe.sections) > 0 else None,
        'Characteristics': pe.FILE_HEADER.Characteristics,
        'text_PointerToRelocations': pe.sections[5].PointerToRelocations if len(pe.sections) > 5 else None,
        'LoaderFlags': pe.OPTIONAL_HEADER.LoaderFlags,
        'MinorImageVersion': pe.OPTIONAL_HEADER.MinorImageVersion,
        'SizeOfHeapReserve': pe.OPTIONAL_HEADER.SizeOfHeapReserve,
        'reloc_Misc_VirtualSize': pe.sections[7].Misc_VirtualSize if len(pe.sections) > 7 else None,
        'SizeOfHeaders': pe.OPTIONAL_HEADER.SizeOfHeaders,
        'bss_NumberOfRelocations': pe.sections[9].NumberOfRelocations if len(pe.sections) > 9 else None,
        'data_SizeOfRawData': pe.sections[3].SizeOfRawData if len(pe.sections) > 3 else None,
        'MinorOperatingSystemVersion': pe.OPTIONAL_HEADER.MinorOperatingSystemVersion,
        'tls_NumberOfLinenumbers': pe.sections[8].NumberOfLinenumbers if len(pe.sections) > 8 else None,
        'reloc_Characteristics': pe.sections[7].Characteristics if len(pe.sections) > 7 else None,
        'TimeDateStamp': pe.FILE_HEADER.TimeDateStamp,
        'ImageBase': pe.OPTIONAL_HEADER.ImageBase,
        'rdata_SizeOfRawData': pe.sections[0].SizeOfRawData if len(pe.sections) > 0 else None
    }
    
    return features

if __name__ == '__main__':
    # Example usage:
    file_path = 'calc.exe'
    extracted_features = extract_pe_features(file_path)

    # Print all the extracted features
    
    #for feature, value in extracted_features.items():
    #    print(f"{feature}: {value}")